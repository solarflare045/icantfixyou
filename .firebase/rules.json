{
  "rules": {
    ".read": "root.child('objects').child(auth.uid).child('admin').val() === true",
    ".write": "root.child('objects').child(auth.uid).child('admin').val() === true",
    
    "objects": {
      ".read": true,
      ".indexOn": ["game", "type", "target"],
      "$object": {
        ".read": "$object === auth.uid || data.child('game').val() === root.child('objects').child(auth.uid).child('game').val()",
      	
        "type": { ".validate": "newData.val() === 'location' || newData.val() === 'user'" },
        "admin": { ".validate": "newData.isBoolean()" },
          
        "name": {
          ".write": "$object === auth.uid",
          ".validate": "newData.isString()"
        },
        
        "game": {
					".write": "$object === auth.uid",
          ".validate": "root.child('games').child(newData.val()).exists()"
        },
          
        "target": {
          ".write": "$object === auth.uid",
          ".validate": "!newData.exists() || root.child('objects').child(newData.val()).child('game').val() === root.child('objects').child(auth.uid).child('game').val()"
        }
      }
    },
      
    "games": {
      ".indexOn": ["owner"],
      "$game": {
        ".read": "$game === root.child('objects').child(auth.uid).child('game').val()",
          
        "owner": { ".validate": "root.child('objects').child(newData.val()).exists()" }
      }
    },
      
    "ailments": {
      ".read": true,
      ".indexOn": "object",
      "$ailment": {          
      	"object": { ".validate": "root.child('objects').child(newData.val()).exists()" }
      }
    },
      
    "events": {
      ".read": true,
      ".indexOn": "game",
      "$event": {          
        "game": { ".validate": "root.child('games').child(newData.val()).exists()" }
      }
    },
      
    "items": {
      ".read": true,
      ".indexOn": "object",
      "$item": {          
        "object": { ".validate": "root.child('objects').child(newData.val()).exists()" }
      }
    },
      
    "jobs": {
      ".indexOn": ["game", "user"],
      "$job": {
        ".read": "data.child('user').val() === auth.uid",
        ".write": "!data.exists()",
        ".validate": "newData.hasChildren(['user'])",
          
        "user": { ".validate": "newData.val() === auth.uid" },
        "game": { ".validate": "root.child('games').child(newData.val()).exists()" }
      }
    },
      
    "secrets": {
      ".indexOn": "secret",
      "$object": {
        ".read": "$object === auth.uid",
        ".write": "$object === auth.uid",
        "secret": { ".validate": "newData.exists()" }
      }
    }
  }
}